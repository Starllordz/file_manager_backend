name: Docker Build

on:
  push:
    branches: [main, develop]
    tags: ['v*']
  pull_request:
    branches: [main, develop]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}
            MQTT_BROKER_HOST=${{ secrets.MQTT_BROKER_HOST }}
            MQTT_BROKER_PORT=${{ secrets.MQTT_BROKER_PORT }}
            MQTT_USERNAME=${{ secrets.MQTT_USERNAME }}
            MQTT_PASSWORD=${{ secrets.MQTT_PASSWORD }}
            ALLOWED_MAC_ADDRESSES=${{ secrets.ALLOWED_MAC_ADDRESSES }}
            NODE_ENV=production
            PORT=3000
            HOST=${{ secrets.HOST }}
            DATABASE_HOST=${{ secrets.DATABASE_HOST }}
            DATABASE_PORT=${{ secrets.DATABASE_PORT }}
            DATABASE_USER=${{ secrets.DATABASE_USER }}
            DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            DATABASE_NAME=${{ secrets.DATABASE_NAME }}
            AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
            MAX_FILE_SIZE=${{ secrets.MAX_FILE_SIZE }}
            NODE_ENV=production 